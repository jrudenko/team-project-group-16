{"mappings":"AACA,SAASA,aACL,IAA4BC,EACpBC,KAAiBD,GAA4CE,SAASC,iBAAiB,2BAEvFF,EAAeG,SAAQ,SAAAC,IAK/B,SAA+BA,GAC3B,IAAIC,EAAiB,KACfC,EAAW,IACXC,EAAaC,SAASJ,EAAcK,WACpCC,EAAgB,EAChBC,EAAO,SAACC,GACLP,IAAgBA,EAAiBO,GACtC,IAAMC,EAAWC,KAAKC,KAAKH,EAAYP,GAAkBC,EAAU,GACnEF,EAAcK,UAAYK,KAAKE,MAAMH,GAAYH,EAAgBH,IAC7DM,EAAW,GACXI,OAAOC,sBAAsBP,E,EAGpCM,OAAOC,sBAAsBP,E,CAjBtBQ,CAAsBf,E,IANtCa,OAAOG,iBAAiB,OAAQtB","sources":["src/JS/counter.js"],"sourcesContent":["window.addEventListener(\"load\", windowLoad);\nfunction windowLoad() {\n    function digitsCountersInit(digitsCountersItems) {\n        let digitsCounters = digitsCountersItems ? digitsCountersItems : document.querySelectorAll(\"[data-digits-counter]\");\n        if (digitsCounters) {\n            digitsCounters.forEach(digitsCounter => {\n                digitsCountersAnimate(digitsCounter);\n            });\n        }\n    }\n    function digitsCountersAnimate(digitsCounter) {\n        let startTimestamp = null;\n        const duration = 4000;\n        const startValue = parseInt(digitsCounter.innerHTML);\n        const startPosition = 0;\n        const step = (timestamp) => {\n            if (!startTimestamp) startTimestamp = timestamp;\n            const progress = Math.min((timestamp - startTimestamp) / duration, 1);\n            digitsCounter.innerHTML = Math.floor(progress * (startPosition + startValue));\n            if (progress < 1) {\n                window.requestAnimationFrame(step);\n            }\n        };\n         window.requestAnimationFrame(step);\n    }\n    digitsCountersInit();\n}"],"names":["windowLoad","digitsCountersItems","digitsCounters","document","querySelectorAll","forEach","digitsCounter","startTimestamp","duration","startValue","parseInt","innerHTML","startPosition","step","timestamp","progress","Math","min","floor","window","requestAnimationFrame","digitsCountersAnimate","addEventListener"],"version":3,"file":"index.93757896.js.map"}